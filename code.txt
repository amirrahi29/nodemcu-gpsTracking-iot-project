#include <TinyGPS++.h>
#include <SoftwareSerial.h>

#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <Firebase_ESP_Client.h>

// Provide the token generation process info.
#include "addons/TokenHelper.h"
// Provide the RTDB payload printing info and other helper functions.
#include "addons/RTDBHelper.h"

// WiFi credentials
#define WIFI_SSID "Gsoft"
#define WIFI_PASSWORD "amirrahiii"

// Firebase project credentials
#define API_KEY "AIzaSyDxf7VZyTOOuyab-JqlkGVzr7Vg0FPxgAQ"
#define DATABASE_URL "mytrackerapp-e290a-default-rtdb.firebaseio.com"

// Define Firebase Data object
FirebaseData fbdo;

FirebaseAuth auth;
FirebaseConfig config;

unsigned long sendDataPrevMillis = 0;
unsigned long firebaseCheckPrevMillis = 0;
bool signupOK = false;

static const int RXPin = 4, TXPin = 3;
static const uint32_t GPSBaud = 9600;

// The TinyGPS++ object
TinyGPSPlus gps;

// The serial connection to the GPS device
SoftwareSerial GPS(RXPin, TXPin);

void setup() {
  Serial.begin(9600);
  GPS.begin(GPSBaud);

  // Serial.begin(115200);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();

  /* Assign the API key (required) */
  config.api_key = API_KEY;

  /* Assign the RTDB URL (required) */
  config.database_url = DATABASE_URL;

  /* Sign up */
  if (Firebase.signUp(&config, &auth, "", "")) {
    Serial.println("Firebase Sign Up Successful");
    signupOK = true;
  } else {
    Serial.printf("Firebase Sign Up Failed. Error: %s\n", config.signer.signupError.message.c_str());
  }

  /* Assign the callback function for the long-running token generation task */
  config.token_status_callback = tokenStatusCallback; // see addons/TokenHelper.h

  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
}

void loop() {
  while (GPS.available() > 0) {
    gps.encode(GPS.read());
    if (gps.location.isUpdated()) {
      Serial.print("Latitude= ");
      Serial.print(gps.location.lat(), 10);  // 10 digits precision
      Serial.print(" Longitude= ");
      Serial.println(gps.location.lng(), 10);  // 10 digits precision

      unsigned long currentMillis = millis();

      // Send data every 15 seconds
      if (currentMillis - sendDataPrevMillis >= 15000 || sendDataPrevMillis == 0) {
        sendDataPrevMillis = currentMillis;

        // Write latitude and longitude to the database
        if (Firebase.RTDB.set(&fbdo, "location/latitude", String(gps.location.lat(), 10)) &&
            Firebase.RTDB.set(&fbdo, "location/longitude", String(gps.location.lng(), 10))) {
          Serial.println("Location data sent to Firebase successfully.");
        } else {
          Serial.println("Failed to send location data to Firebase.");
          Serial.println("Error: " + fbdo.errorReason());
        }
      }

      // Check Firebase connection every 10 seconds
      if (currentMillis - firebaseCheckPrevMillis >= 10000) {
        firebaseCheckPrevMillis = currentMillis;
        checkFirebaseConnection();
      }

      delay(1000);
    }
  }
}

void checkFirebaseConnection() {
  if (Firebase.ready() && signupOK) {
    Serial.println("Firebase is ready and connected.");
  } else {
    Serial.println("Firebase not ready. Please check the connection.");
  }
}
